<?xml version="1.0" encoding="UTF-8"?><testrun name="MetamorphicTests (1)" project="PetClinicModulithSync" tests="11" started="11" failures="4" errors="0" ignored="0">
  <testsuite name="org.springframework.samples.MetamorphicTests" time="34.063" displayname="MetamorphicTests" uniqueid="[engine:jqwik]/[class:org.springframework.samples.MetamorphicTests]">
    <testcase name="editPetNameShouldBeVisible" classname="org.springframework.samples.MetamorphicTests" time="11.785" displayname="editPetNameShouldBeVisible" parameters="org.springframework.samples.Owner.model.Owner,java.lang.String,java.lang.String" uniqueid="[engine:jqwik]/[class:org.springframework.samples.MetamorphicTests]/[property:editPetNameShouldBeVisible(org.springframework.samples.Owner.model.Owner, java.lang.String, java.lang.String)]">
      <failure>java.lang.AssertionError: &#13;
Expecting actual not to be empty&#13;
	at org.springframework.samples.MetamorphicTests.editPetNameShouldBeVisible(MetamorphicTests.java:570)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&#13;
	at net.jqwik.engine.execution.CheckedPropertyFactory.lambda$createRawFunction$1(CheckedPropertyFactory.java:84)&#13;
	at net.jqwik.engine.execution.CheckedPropertyFactory.lambda$createRawFunction$2(CheckedPropertyFactory.java:91)&#13;
	at net.jqwik.engine.properties.CheckedFunction.execute(CheckedFunction.java:17)&#13;
	at net.jqwik.api.lifecycle.AroundTryHook.lambda$static$0(AroundTryHook.java:57)&#13;
	at net.jqwik.engine.execution.lifecycle.HookSupport.lambda$wrap$2(HookSupport.java:48)&#13;
	at net.jqwik.engine.hooks.lifecycle.TryLifecycleMethodsHook.aroundTry(TryLifecycleMethodsHook.java:56)&#13;
	at net.jqwik.engine.execution.lifecycle.HookSupport.lambda$wrap$3(HookSupport.java:53)&#13;
	at net.jqwik.engine.execution.lifecycle.HookSupport.lambda$wrap$2(HookSupport.java:48)&#13;
	at net.jqwik.engine.hooks.lifecycle.BeforeTryMembersHook.aroundTry(BeforeTryMembersHook.java:69)&#13;
	at net.jqwik.engine.execution.lifecycle.HookSupport.lambda$wrap$3(HookSupport.java:53)&#13;
	at net.jqwik.engine.execution.CheckedPropertyFactory.lambda$createTryExecutor$0(CheckedPropertyFactory.java:60)&#13;
	at net.jqwik.engine.execution.lifecycle.AroundTryLifecycle.execute(AroundTryLifecycle.java:23)&#13;
	at net.jqwik.engine.properties.GenericProperty.lambda$createFalsifier$1(GenericProperty.java:229)&#13;
	at net.jqwik.engine.properties.shrinking.PropertyShrinker.lambda$shrink$0(PropertyShrinker.java:55)&#13;
	at net.jqwik.engine.properties.shrinking.PropertyShrinker.lambda$shrinkAsLongAsSampleImproves$6(PropertyShrinker.java:122)&#13;
	at net.jqwik.engine.properties.shrinking.AbstractSampleShrinker.lambda$falsify$5(AbstractSampleShrinker.java:91)&#13;
	at java.base/java.util.HashMap.computeIfAbsent(HashMap.java:1228)&#13;
	at net.jqwik.engine.properties.shrinking.AbstractSampleShrinker.falsify(AbstractSampleShrinker.java:91)&#13;
	at net.jqwik.engine.properties.shrinking.AbstractSampleShrinker.lambda$shrink$2(AbstractSampleShrinker.java:53)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)&#13;
	at java.base/java.util.stream.ReferencePipeline$15$1.accept(ReferencePipeline.java:541)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)&#13;
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.tryAdvance(StreamSpliterators.java:300)&#13;
	at net.jqwik.engine.support.StreamConcatenation$ConcatSpliterator.tryAdvance(StreamConcatenation.java:302)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:129)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:527)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:513)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)&#13;
	at java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.findAny(ReferencePipeline.java:652)&#13;
	at net.jqwik.engine.properties.shrinking.AbstractSampleShrinker.shrink(AbstractSampleShrinker.java:63)&#13;
	at net.jqwik.engine.properties.shrinking.OneAfterTheOtherParameterShrinker.shrinkSingleParameter(OneAfterTheOtherParameterShrinker.java:43)&#13;
	at net.jqwik.engine.properties.shrinking.OneAfterTheOtherParameterShrinker.shrink(OneAfterTheOtherParameterShrinker.java:25)&#13;
	at net.jqwik.engine.properties.shrinking.ShrinkingAlgorithm.shrinkOneParameterAfterTheOther(ShrinkingAlgorithm.java:52)&#13;
	at net.jqwik.engine.properties.shrinking.ShrinkingAlgorithm.shrink(ShrinkingAlgorithm.java:32)&#13;
	at net.jqwik.engine.properties.shrinking.PropertyShrinker.shrinkAsLongAsSampleImproves(PropertyShrinker.java:135)&#13;
	at net.jqwik.engine.properties.shrinking.PropertyShrinker.lambda$shrink$3(PropertyShrinker.java:87)&#13;
	at net.jqwik.engine.execution.lifecycle.CurrentTestDescriptor.runWithDescriptor(CurrentTestDescriptor.java:17)&#13;
	at net.jqwik.engine.properties.shrinking.PropertyShrinker.lambda$withTimeout$4(PropertyShrinker.java:103)&#13;
	at net.jqwik.engine.execution.lifecycle.CurrentDomainContext.runWithContext(CurrentDomainContext.java:28)&#13;
	at net.jqwik.engine.properties.shrinking.PropertyShrinker.lambda$withTimeout$5(PropertyShrinker.java:101)&#13;
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)&#13;
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="searchWithLongerLastNameIsSubset" classname="org.springframework.samples.MetamorphicTests" time="0.069" displayname="searchWithLongerLastNameIsSubset" parameters="java.lang.String,java.lang.String" uniqueid="[engine:jqwik]/[class:org.springframework.samples.MetamorphicTests]/[property:searchWithLongerLastNameIsSubset(java.lang.String, java.lang.String)]"/>
    <testcase name="addVisitIncreasesTotal" classname="org.springframework.samples.MetamorphicTests" time="1.169" displayname="addVisitIncreasesTotal" parameters="org.springframework.samples.Owner.model.Owner" uniqueid="[engine:jqwik]/[class:org.springframework.samples.MetamorphicTests]/[property:addVisitIncreasesTotal(org.springframework.samples.Owner.model.Owner)]">
      <failure>
        <expected>true</expected>
        <actual>false</actual>
        org.opentest4j.AssertionFailedError: &#13;
Expecting value to be true but was false&#13;
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)&#13;
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)&#13;
	at org.springframework.samples.MetamorphicTests.addVisitIncreasesTotal(MetamorphicTests.java:774)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&#13;
	at net.jqwik.engine.execution.CheckedPropertyFactory.lambda$createRawFunction$1(CheckedPropertyFactory.java:84)&#13;
	at net.jqwik.engine.execution.CheckedPropertyFactory.lambda$createRawFunction$2(CheckedPropertyFactory.java:91)&#13;
	at net.jqwik.engine.properties.CheckedFunction.execute(CheckedFunction.java:17)&#13;
	at net.jqwik.api.lifecycle.AroundTryHook.lambda$static$0(AroundTryHook.java:57)&#13;
	at net.jqwik.engine.execution.lifecycle.HookSupport.lambda$wrap$2(HookSupport.java:48)&#13;
	at net.jqwik.engine.hooks.lifecycle.TryLifecycleMethodsHook.aroundTry(TryLifecycleMethodsHook.java:56)&#13;
	at net.jqwik.engine.execution.lifecycle.HookSupport.lambda$wrap$3(HookSupport.java:53)&#13;
	at net.jqwik.engine.execution.lifecycle.HookSupport.lambda$wrap$2(HookSupport.java:48)&#13;
	at net.jqwik.engine.hooks.lifecycle.BeforeTryMembersHook.aroundTry(BeforeTryMembersHook.java:69)&#13;
	at net.jqwik.engine.execution.lifecycle.HookSupport.lambda$wrap$3(HookSupport.java:53)&#13;
	at net.jqwik.engine.execution.CheckedPropertyFactory.lambda$createTryExecutor$0(CheckedPropertyFactory.java:60)&#13;
	at net.jqwik.engine.execution.lifecycle.AroundTryLifecycle.execute(AroundTryLifecycle.java:23)&#13;
	at net.jqwik.engine.properties.GenericProperty.lambda$createFalsifier$1(GenericProperty.java:229)&#13;
	at net.jqwik.engine.properties.shrinking.PropertyShrinker.lambda$shrink$0(PropertyShrinker.java:55)&#13;
	at net.jqwik.engine.properties.shrinking.PropertyShrinker.lambda$shrinkAsLongAsSampleImproves$6(PropertyShrinker.java:122)&#13;
	at net.jqwik.engine.properties.shrinking.AbstractSampleShrinker.lambda$falsify$5(AbstractSampleShrinker.java:91)&#13;
	at java.base/java.util.HashMap.computeIfAbsent(HashMap.java:1228)&#13;
	at net.jqwik.engine.properties.shrinking.AbstractSampleShrinker.falsify(AbstractSampleShrinker.java:91)&#13;
	at net.jqwik.engine.properties.shrinking.AbstractSampleShrinker.lambda$shrink$2(AbstractSampleShrinker.java:53)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)&#13;
	at java.base/java.util.stream.ReferencePipeline$15$1.accept(ReferencePipeline.java:541)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)&#13;
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.tryAdvance(StreamSpliterators.java:300)&#13;
	at net.jqwik.engine.support.StreamConcatenation$ConcatSpliterator.tryAdvance(StreamConcatenation.java:302)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:129)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:527)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:513)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)&#13;
	at java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.findAny(ReferencePipeline.java:652)&#13;
	at net.jqwik.engine.properties.shrinking.AbstractSampleShrinker.shrink(AbstractSampleShrinker.java:63)&#13;
	at net.jqwik.engine.properties.shrinking.OneAfterTheOtherParameterShrinker.shrinkSingleParameter(OneAfterTheOtherParameterShrinker.java:43)&#13;
	at net.jqwik.engine.properties.shrinking.OneAfterTheOtherParameterShrinker.shrink(OneAfterTheOtherParameterShrinker.java:25)&#13;
	at net.jqwik.engine.properties.shrinking.ShrinkingAlgorithm.shrinkOneParameterAfterTheOther(ShrinkingAlgorithm.java:52)&#13;
	at net.jqwik.engine.properties.shrinking.ShrinkingAlgorithm.shrink(ShrinkingAlgorithm.java:32)&#13;
	at net.jqwik.engine.properties.shrinking.PropertyShrinker.shrinkAsLongAsSampleImproves(PropertyShrinker.java:135)&#13;
	at net.jqwik.engine.properties.shrinking.PropertyShrinker.lambda$shrink$3(PropertyShrinker.java:87)&#13;
	at net.jqwik.engine.execution.lifecycle.CurrentTestDescriptor.runWithDescriptor(CurrentTestDescriptor.java:17)&#13;
	at net.jqwik.engine.properties.shrinking.PropertyShrinker.lambda$withTimeout$4(PropertyShrinker.java:103)&#13;
	at net.jqwik.engine.execution.lifecycle.CurrentDomainContext.runWithContext(CurrentDomainContext.java:28)&#13;
	at net.jqwik.engine.properties.shrinking.PropertyShrinker.lambda$withTimeout$5(PropertyShrinker.java:101)&#13;
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)&#13;
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)&#13;
&#13;

      </failure>
    </testcase>
    <testcase name="differentLastNamesShouldReturnDisjointOwners" classname="org.springframework.samples.MetamorphicTests" time="5.217" displayname="differentLastNamesShouldReturnDisjointOwners" parameters="net.jqwik.api.Tuple$Tuple2" uniqueid="[engine:jqwik]/[class:org.springframework.samples.MetamorphicTests]/[property:differentLastNamesShouldReturnDisjointOwners(net.jqwik.api.Tuple$Tuple2)]"/>
    <testcase name="repeatedPetListShouldBeEqual" classname="org.springframework.samples.MetamorphicTests" time="1.034" displayname="repeatedPetListShouldBeEqual" parameters="org.springframework.samples.Owner.model.Owner" uniqueid="[engine:jqwik]/[class:org.springframework.samples.MetamorphicTests]/[property:repeatedPetListShouldBeEqual(org.springframework.samples.Owner.model.Owner)]">
      <failure>
        <expected>true</expected>
        <actual>false</actual>
        org.opentest4j.AssertionFailedError: &#13;
Expecting value to be true but was false&#13;
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)&#13;
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)&#13;
	at org.springframework.samples.MetamorphicTests.repeatedPetListShouldBeEqual(MetamorphicTests.java:919)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&#13;
	at net.jqwik.engine.execution.CheckedPropertyFactory.lambda$createRawFunction$1(CheckedPropertyFactory.java:84)&#13;
	at net.jqwik.engine.execution.CheckedPropertyFactory.lambda$createRawFunction$2(CheckedPropertyFactory.java:91)&#13;
	at net.jqwik.engine.properties.CheckedFunction.execute(CheckedFunction.java:17)&#13;
	at net.jqwik.api.lifecycle.AroundTryHook.lambda$static$0(AroundTryHook.java:57)&#13;
	at net.jqwik.engine.execution.lifecycle.HookSupport.lambda$wrap$2(HookSupport.java:48)&#13;
	at net.jqwik.engine.hooks.lifecycle.TryLifecycleMethodsHook.aroundTry(TryLifecycleMethodsHook.java:56)&#13;
	at net.jqwik.engine.execution.lifecycle.HookSupport.lambda$wrap$3(HookSupport.java:53)&#13;
	at net.jqwik.engine.execution.lifecycle.HookSupport.lambda$wrap$2(HookSupport.java:48)&#13;
	at net.jqwik.engine.hooks.lifecycle.BeforeTryMembersHook.aroundTry(BeforeTryMembersHook.java:69)&#13;
	at net.jqwik.engine.execution.lifecycle.HookSupport.lambda$wrap$3(HookSupport.java:53)&#13;
	at net.jqwik.engine.execution.CheckedPropertyFactory.lambda$createTryExecutor$0(CheckedPropertyFactory.java:60)&#13;
	at net.jqwik.engine.execution.lifecycle.AroundTryLifecycle.execute(AroundTryLifecycle.java:23)&#13;
	at net.jqwik.engine.properties.GenericProperty.lambda$createFalsifier$1(GenericProperty.java:229)&#13;
	at net.jqwik.engine.properties.shrinking.PropertyShrinker.lambda$shrink$0(PropertyShrinker.java:55)&#13;
	at net.jqwik.engine.properties.shrinking.PropertyShrinker.lambda$shrinkAsLongAsSampleImproves$6(PropertyShrinker.java:122)&#13;
	at net.jqwik.engine.properties.shrinking.AbstractSampleShrinker.lambda$falsify$5(AbstractSampleShrinker.java:91)&#13;
	at java.base/java.util.HashMap.computeIfAbsent(HashMap.java:1228)&#13;
	at net.jqwik.engine.properties.shrinking.AbstractSampleShrinker.falsify(AbstractSampleShrinker.java:91)&#13;
	at net.jqwik.engine.properties.shrinking.AbstractSampleShrinker.lambda$shrink$2(AbstractSampleShrinker.java:53)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)&#13;
	at java.base/java.util.stream.ReferencePipeline$15$1.accept(ReferencePipeline.java:541)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)&#13;
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.tryAdvance(StreamSpliterators.java:300)&#13;
	at net.jqwik.engine.support.StreamConcatenation$ConcatSpliterator.tryAdvance(StreamConcatenation.java:302)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:129)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:527)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:513)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)&#13;
	at java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.findAny(ReferencePipeline.java:652)&#13;
	at net.jqwik.engine.properties.shrinking.AbstractSampleShrinker.shrink(AbstractSampleShrinker.java:63)&#13;
	at net.jqwik.engine.properties.shrinking.OneAfterTheOtherParameterShrinker.shrinkSingleParameter(OneAfterTheOtherParameterShrinker.java:43)&#13;
	at net.jqwik.engine.properties.shrinking.OneAfterTheOtherParameterShrinker.shrink(OneAfterTheOtherParameterShrinker.java:25)&#13;
	at net.jqwik.engine.properties.shrinking.ShrinkingAlgorithm.shrinkOneParameterAfterTheOther(ShrinkingAlgorithm.java:52)&#13;
	at net.jqwik.engine.properties.shrinking.ShrinkingAlgorithm.shrink(ShrinkingAlgorithm.java:32)&#13;
	at net.jqwik.engine.properties.shrinking.PropertyShrinker.shrinkAsLongAsSampleImproves(PropertyShrinker.java:135)&#13;
	at net.jqwik.engine.properties.shrinking.PropertyShrinker.lambda$shrink$3(PropertyShrinker.java:87)&#13;
	at net.jqwik.engine.execution.lifecycle.CurrentTestDescriptor.runWithDescriptor(CurrentTestDescriptor.java:17)&#13;
	at net.jqwik.engine.properties.shrinking.PropertyShrinker.lambda$withTimeout$4(PropertyShrinker.java:103)&#13;
	at net.jqwik.engine.execution.lifecycle.CurrentDomainContext.runWithContext(CurrentDomainContext.java:28)&#13;
	at net.jqwik.engine.properties.shrinking.PropertyShrinker.lambda$withTimeout$5(PropertyShrinker.java:101)&#13;
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)&#13;
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)&#13;
&#13;

      </failure>
    </testcase>
    <testcase name="editOwnerPhoneNumberShouldBeVisible" classname="org.springframework.samples.MetamorphicTests" time="5.318" displayname="editOwnerPhoneNumberShouldBeVisible" parameters="org.springframework.samples.Owner.model.Owner,java.lang.String" uniqueid="[engine:jqwik]/[class:org.springframework.samples.MetamorphicTests]/[property:editOwnerPhoneNumberShouldBeVisible(org.springframework.samples.Owner.model.Owner, java.lang.String)]"/>
    <testcase name="addOwnerIncreasesTotal" classname="org.springframework.samples.MetamorphicTests" time="3.886" displayname="addOwnerIncreasesTotal" parameters="org.springframework.samples.Owner.model.Owner" uniqueid="[engine:jqwik]/[class:org.springframework.samples.MetamorphicTests]/[property:addOwnerIncreasesTotal(org.springframework.samples.Owner.model.Owner)]"/>
    <testcase name="vetSubsetIsContainedInFullSet" classname="org.springframework.samples.MetamorphicTests" time="0.126" displayname="vetSubsetIsContainedInFullSet" parameters="int" uniqueid="[engine:jqwik]/[class:org.springframework.samples.MetamorphicTests]/[property:vetSubsetIsContainedInFullSet(int)]"/>
    <testcase name="vetListShouldBeConsistent" classname="org.springframework.samples.MetamorphicTests" time="2.564" displayname="vetListShouldBeConsistent" uniqueid="[engine:jqwik]/[class:org.springframework.samples.MetamorphicTests]/[property:vetListShouldBeConsistent()]"/>
    <testcase name="getSameOwnerTwiceYieldsSameResult" classname="org.springframework.samples.MetamorphicTests" time="1.581" displayname="getSameOwnerTwiceYieldsSameResult" parameters="org.springframework.samples.Owner.model.Owner" uniqueid="[engine:jqwik]/[class:org.springframework.samples.MetamorphicTests]/[property:getSameOwnerTwiceYieldsSameResult(org.springframework.samples.Owner.model.Owner)]"/>
    <testcase name="addPetIncreasesPetCount" classname="org.springframework.samples.MetamorphicTests" time="1.229" displayname="addPetIncreasesPetCount" parameters="org.springframework.samples.Owner.model.Owner,org.springframework.samples.Pet.model.Pet" uniqueid="[engine:jqwik]/[class:org.springframework.samples.MetamorphicTests]/[property:addPetIncreasesPetCount(org.springframework.samples.Owner.model.Owner, org.springframework.samples.Pet.model.Pet)]">
      <failure>java.lang.AssertionError: &#13;
Expecting actual not to be null&#13;
	at org.springframework.samples.MetamorphicTests.addPetIncreasesPetCount(MetamorphicTests.java:437)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&#13;
	at net.jqwik.engine.execution.CheckedPropertyFactory.lambda$createRawFunction$1(CheckedPropertyFactory.java:84)&#13;
	at net.jqwik.engine.execution.CheckedPropertyFactory.lambda$createRawFunction$2(CheckedPropertyFactory.java:91)&#13;
	at net.jqwik.engine.properties.CheckedFunction.execute(CheckedFunction.java:17)&#13;
	at net.jqwik.api.lifecycle.AroundTryHook.lambda$static$0(AroundTryHook.java:57)&#13;
	at net.jqwik.engine.execution.lifecycle.HookSupport.lambda$wrap$2(HookSupport.java:48)&#13;
	at net.jqwik.engine.hooks.lifecycle.TryLifecycleMethodsHook.aroundTry(TryLifecycleMethodsHook.java:56)&#13;
	at net.jqwik.engine.execution.lifecycle.HookSupport.lambda$wrap$3(HookSupport.java:53)&#13;
	at net.jqwik.engine.execution.lifecycle.HookSupport.lambda$wrap$2(HookSupport.java:48)&#13;
	at net.jqwik.engine.hooks.lifecycle.BeforeTryMembersHook.aroundTry(BeforeTryMembersHook.java:69)&#13;
	at net.jqwik.engine.execution.lifecycle.HookSupport.lambda$wrap$3(HookSupport.java:53)&#13;
	at net.jqwik.engine.execution.CheckedPropertyFactory.lambda$createTryExecutor$0(CheckedPropertyFactory.java:60)&#13;
	at net.jqwik.engine.execution.lifecycle.AroundTryLifecycle.execute(AroundTryLifecycle.java:23)&#13;
	at net.jqwik.engine.properties.GenericProperty.lambda$createFalsifier$1(GenericProperty.java:229)&#13;
	at net.jqwik.engine.properties.shrinking.PropertyShrinker.lambda$shrink$0(PropertyShrinker.java:55)&#13;
	at net.jqwik.engine.properties.shrinking.PropertyShrinker.lambda$shrinkAsLongAsSampleImproves$6(PropertyShrinker.java:122)&#13;
	at net.jqwik.engine.properties.shrinking.AbstractSampleShrinker.lambda$falsify$5(AbstractSampleShrinker.java:91)&#13;
	at java.base/java.util.HashMap.computeIfAbsent(HashMap.java:1228)&#13;
	at net.jqwik.engine.properties.shrinking.AbstractSampleShrinker.falsify(AbstractSampleShrinker.java:91)&#13;
	at net.jqwik.engine.properties.shrinking.AbstractSampleShrinker.lambda$shrink$2(AbstractSampleShrinker.java:53)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)&#13;
	at java.base/java.util.stream.ReferencePipeline$15$1.accept(ReferencePipeline.java:541)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)&#13;
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.tryAdvance(StreamSpliterators.java:300)&#13;
	at net.jqwik.engine.support.StreamConcatenation$ConcatSpliterator.tryAdvance(StreamConcatenation.java:302)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:129)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:527)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:513)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)&#13;
	at java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.findAny(ReferencePipeline.java:652)&#13;
	at net.jqwik.engine.properties.shrinking.AbstractSampleShrinker.shrink(AbstractSampleShrinker.java:63)&#13;
	at net.jqwik.engine.properties.shrinking.OneAfterTheOtherParameterShrinker.shrinkSingleParameter(OneAfterTheOtherParameterShrinker.java:43)&#13;
	at net.jqwik.engine.properties.shrinking.OneAfterTheOtherParameterShrinker.shrink(OneAfterTheOtherParameterShrinker.java:25)&#13;
	at net.jqwik.engine.properties.shrinking.ShrinkingAlgorithm.shrinkOneParameterAfterTheOther(ShrinkingAlgorithm.java:52)&#13;
	at net.jqwik.engine.properties.shrinking.ShrinkingAlgorithm.shrink(ShrinkingAlgorithm.java:32)&#13;
	at net.jqwik.engine.properties.shrinking.PropertyShrinker.shrinkAsLongAsSampleImproves(PropertyShrinker.java:135)&#13;
	at net.jqwik.engine.properties.shrinking.PropertyShrinker.lambda$shrink$3(PropertyShrinker.java:87)&#13;
	at net.jqwik.engine.execution.lifecycle.CurrentTestDescriptor.runWithDescriptor(CurrentTestDescriptor.java:17)&#13;
	at net.jqwik.engine.properties.shrinking.PropertyShrinker.lambda$withTimeout$4(PropertyShrinker.java:103)&#13;
	at net.jqwik.engine.execution.lifecycle.CurrentDomainContext.runWithContext(CurrentDomainContext.java:28)&#13;
	at net.jqwik.engine.properties.shrinking.PropertyShrinker.lambda$withTimeout$5(PropertyShrinker.java:101)&#13;
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)&#13;
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)&#13;
&#13;
</failure>
    </testcase>
  </testsuite>
</testrun>
