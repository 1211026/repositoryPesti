package org.springframework.samples.Owner.model;


import jakarta.persistence.*;
import jakarta.validation.constraints.Digits;
import jakarta.validation.constraints.NotBlank;
import lombok.Getter;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;

import org.springframework.samples.Owner.model.OwnerPet.Visit;


@Getter
public class Owner implements Serializable {

    private Integer id;

    @NotBlank
    private String firstName;

    @NotBlank
    private String lastName;

    @NotBlank
    private String address;

    @NotBlank
    private String city;

    @NotBlank
    @Digits(fraction = 0, integer = 10)
    private String telephone;

    private List<OwnerPet> pets = new ArrayList<>();

    public Owner(Integer id, String firstName, String lastName, String address, String city, String telephone, List<OwnerPet> pets) {
        this.id = id;
        this.firstName = firstName;
        this.lastName = lastName;
        this.address = address;
        this.city = city;
        this.telephone = telephone;
        this.pets = pets;
    }

    public Owner() {

    }

    public void setId(Integer id) {
        this.id = id;
    }

    public void setAddress(String address) {
        this.address = address;
    }

    public void setCity(String city) {
        this.city = city;
    }

    public void setTelephone(String telephone) {
        this.telephone = telephone;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    public void setPets(List<OwnerPet> pets) {
        this.pets = pets;
    }

	public String getFirstName() {
		// TODO Auto-generated method stub
		return this.firstName;
	}
	
	public String getLastName() {
		// TODO Auto-generated method stub
		return this.lastName;
	}
	
	public String getAddress() {
		// TODO Auto-generated method stub
		return this.address;
	}
	
	public String getCity() {
		// TODO Auto-generated method stub
		return this.city;
	}
	
	public String getTelephone() {
		// TODO Auto-generated method stub
		return this.telephone;
	}
	
	public List<OwnerPet> getPets() {
		// TODO Auto-generated method stub
		return this.pets;
	}
	
	public Integer getId() {
		// TODO Auto-generated method stub
		return this.id;
	}
	
	
	public void addPet(OwnerPet pet) {
	    if (this.pets == null) {
	        this.pets = new ArrayList<>();
	    }
	    
	    // Verificar se o pet já existe na lista
	    boolean petExists = false;
	    for (OwnerPet existingPet : this.pets) {
	        if (existingPet.getId() != null && existingPet.getId().equals(pet.getId())) {
	            petExists = true;
	            break;
	        }
	        
	        // Se o ID for nulo, verificar pelo nome
	        if (existingPet.getName() != null && existingPet.getName().equals(pet.getName())) {
	            petExists = true;
	            break;
	        }
	    }
	    
	    // Adicionar o pet apenas se ele não existir na lista
	    if (!petExists) {
	        pet.setOwner_id(this.id);
	        this.pets.add(pet);
	        System.out.println("Pet adicionado ao owner: " + pet.getName() + " (Owner ID: " + this.id + ")");
	    } else {
	        System.out.println("Pet já existe na lista do owner: " + pet.getName());
	    }
	}

	public void addPet(OwnerPet pet, Set<Visit> visits) {
		if (this.pets == null) {
			this.pets = new ArrayList<>();
		}

		// Verificar se o pet já existe na lista
		boolean petExists = false;
		for (OwnerPet existingPet : this.pets) {
			if (existingPet.getId() != null && existingPet.getId().equals(pet.getId())) {
				petExists = true;
				break;
			}
			// Se o ID for nulo, verificar pelo nome
			if (existingPet.getName() != null && existingPet.getName().equals(pet.getName())) {
				petExists = true;
				break;
			}
		}

		// Adicionar o pet apenas se ele não existir na lista
		if (!petExists) {
			pet.setOwner_id(this.id);
			pet.setVisits(visits);
			this.pets.add(pet);
			System.out.println("Pet adicionado ao owner: " + pet.getName() + " (Owner ID: " + this.id + ")");
		} else {
			System.out.println("Pet já existe na lista do owner: " + pet.getName());
		
		
	}
	}

